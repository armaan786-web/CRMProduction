# Generated by Django 4.2.5 on 2024-01-23 10:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('1', 'HOD'), ('2', 'Admin'), ('3', 'Employee'), ('4', 'Agent'), ('5', 'Out Sourcing Agent'), ('6', 'Customer')], default='1', max_length=10)),
                ('is_logged_in', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('contact_no', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('City', models.CharField(max_length=50)),
                ('Address', models.TextField()),
                ('zipcode', models.CharField(max_length=100)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married')], max_length=50, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('InReview', 'InReview'), ('Approved', 'Approved'), ('Reject', 'Reject')], default='Pending', max_length=255)),
                ('activeinactive', models.BooleanField(blank=True, default=True, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='media/Agent/Profile Pic/')),
                ('organization_name', models.CharField(blank=True, max_length=100, null=True)),
                ('business_type', models.CharField(blank=True, max_length=100, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('account_holder', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('branch_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_no', models.CharField(blank=True, max_length=100, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=100, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('registeron', models.DateTimeField(auto_now_add=True)),
                ('adhar_card_front', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
                ('adhar_card_back', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
                ('pancard', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
                ('registration_certificate', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('fullname', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=15)),
                ('departure_city', models.CharField(max_length=100)),
                ('number_of_people', models.PositiveIntegerField()),
                ('departure_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=20)),
                ('branch_source', models.CharField(choices=[('COCO', 'Company Owned Company Operated'), ('COFO', 'Company Owned Franchise Operated'), ('FOCO', 'Franchise Owned Company Operated'), ('FOFO', 'Franchise Owned Franchise Operated')], max_length=50)),
                ('last_updated_on', models.DateTimeField(auto_now=True)),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('group_member', models.ManyToManyField(related_name='chat_member', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CourierAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('landmark', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('zipcode', models.IntegerField()),
                ('docker_no', models.CharField(max_length=100)),
                ('sender_no', models.CharField(blank=True, max_length=15, null=True)),
                ('receiver_no', models.CharField(blank=True, max_length=15, null=True)),
                ('courier_no', models.CharField(blank=True, max_length=15, null=True)),
                ('receiver_address', models.CharField(max_length=150)),
                ('sender_address', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.CharField(choices=[('Pick', 'Pick'), ('In Transit', 'In Transit'), ('Receive', 'Receive')], max_length=50)),
                ('lastupdated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('last_updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=255)),
                ('last_updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Document_category', models.CharField(max_length=200)),
                ('lastupdated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('last_updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('department', models.CharField(blank=True, choices=[('Presales', 'Presales'), ('Assesment', 'Assesment'), ('Sales', 'Sales'), ('Documentation', 'Documentation'), ('Visa Team', 'Visa Team'), ('HR', 'HR'), ('Developement Team', 'Developement Team'), ('Design Team', 'Design Team'), ('Account Team', 'Account Team')], max_length=20, null=True)),
                ('contact_no', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('City', models.CharField(blank=True, max_length=50, null=True)),
                ('Address', models.TextField(blank=True, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=100, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='media/Employee/profile_pic/')),
                ('created', models.DateTimeField(auto_now=True)),
                ('tata_tele_authorization', models.CharField(blank=True, max_length=500, null=True)),
                ('tata_tele_api_key', models.CharField(blank=True, max_length=200, null=True)),
                ('tata_tele_agent_number', models.CharField(blank=True, max_length=200, null=True)),
                ('color_code', models.CharField(blank=True, choices=[('Grey', 'Grey'), ('Blue', 'Blue'), ('White', 'White'), ('Red', 'Red'), ('Green', 'Green')], max_length=20, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Enquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Salutation', models.CharField(blank=True, choices=[('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Miss', 'Miss'), ('Master', 'Master')], max_length=20, null=True)),
                ('FirstName', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('MiddleName', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('LastName', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('Dob', models.DateField(blank=True, null=True)),
                ('Gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=100, null=True)),
                ('Visa_type', models.CharField(blank=True, choices=[('Single', 'Single'), ('Couple', 'Couple'), ('Family', 'Family')], max_length=50, null=True)),
                ('Source', models.CharField(blank=True, choices=[('Facebook', 'Facebook'), ('Instagram', 'Instagram'), ('Twitter', 'Twitter'), ('Reference', 'Reference'), ('Youtube', 'Youtube'), ('WhatsApp', 'WhatsApp'), ('Google', 'Google'), ('Others', 'Others')], max_length=100, null=True)),
                ('Reference', models.CharField(blank=True, max_length=100, null=True)),
                ('lead_status', models.CharField(choices=[('New Lead', 'New Lead'), ('Accept', 'Accept'), ('Active', 'Active'), ('PreEnrolled', 'PreEnrolled'), ('Enrolled', 'Enrolled'), ('Inprocess', 'Inprocess'), ('Ready To Submit', 'Ready To Submit'), ('Appointment', 'Appointment'), ('Ready To Collection', 'Ready To Collection'), ('Result', 'Result'), ('Delivery', 'Delivery'), ('Reject', 'Reject'), ('Case Initiated', 'Case Initiated')], default='New Lead', max_length=100)),
                ('enquiry_number', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('digital_signature', models.FileField(blank=True, null=True, upload_to='media/Digital Signature/')),
                ('spouse_relation', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_name', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_no', models.CharField(blank=True, max_length=15, null=True)),
                ('spouse_email', models.EmailField(blank=True, max_length=254)),
                ('spouse_passport', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_dob', models.DateField(blank=True, null=True)),
                ('spouse_relation1', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_name1', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_no1', models.CharField(blank=True, max_length=15, null=True)),
                ('spouse_email1', models.EmailField(blank=True, max_length=254)),
                ('spouse_passport1', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_dob1', models.DateField(blank=True, null=True)),
                ('spouse_relation2', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_name2', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_no2', models.CharField(blank=True, max_length=15, null=True)),
                ('spouse_email2', models.EmailField(blank=True, max_length=254)),
                ('spouse_passport2', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_dob2', models.DateField(blank=True, null=True)),
                ('spouse_relation3', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_name3', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_no3', models.CharField(blank=True, max_length=15, null=True)),
                ('spouse_email3', models.EmailField(blank=True, max_length=254)),
                ('spouse_passport3', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_dob3', models.DateField(blank=True, null=True)),
                ('spouse_relation4', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_name4', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_no4', models.CharField(blank=True, max_length=15, null=True)),
                ('spouse_email4', models.EmailField(blank=True, max_length=254)),
                ('spouse_passport4', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_dob4', models.DateField(blank=True, null=True)),
                ('spouse_relation5', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_name5', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_no5', models.CharField(blank=True, max_length=15, null=True)),
                ('spouse_email5', models.EmailField(blank=True, max_length=254)),
                ('spouse_passport5', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_dob5', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('contact', models.CharField(max_length=10)),
                ('Country', django_countries.fields.CountryField(max_length=2)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('passport_no', models.CharField(max_length=255)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expirty_Date', models.DateField(blank=True, null=True)),
                ('issue_country', models.CharField(blank=True, max_length=255, null=True)),
                ('city_of_birth', models.CharField(blank=True, max_length=100, null=True)),
                ('country_of_birth', models.CharField(blank=True, max_length=244, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('citizenship', models.CharField(blank=True, max_length=100, null=True)),
                ('more_than_country', models.BooleanField(blank=True, null=True)),
                ('other_country', models.BooleanField(blank=True, null=True)),
                ('more_than_one_country', models.CharField(blank=True, max_length=100, null=True)),
                ('studyin_in_other_country', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_email', models.EmailField(blank=True, max_length=254)),
                ('relation_With_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('last_updated_on', models.DateTimeField(auto_now=True)),
                ('registered_on', models.DateTimeField(auto_now_add=True)),
                ('case_id', models.CharField(editable=False, max_length=15, unique=True)),
                ('archive', models.BooleanField(blank=True, default=False, null=True)),
                ('color_code', models.CharField(blank=True, choices=[('Grey', 'Grey'), ('Blue', 'Blue'), ('White', 'White'), ('Red', 'Red'), ('Green', 'Green')], max_length=20, null=True)),
            ],
            options={
                'db_table': 'Enquiry',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('group_member', models.ManyToManyField(related_name='groups_member', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VisaCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('subcategory', models.CharField(max_length=100)),
                ('lastupdated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('last_updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'VisaCategory',
            },
        ),
        migrations.CreateModel(
            name='VisaCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now=True)),
                ('lastupdated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('last_updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Work_Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=244, null=True)),
                ('designation', models.CharField(blank=True, max_length=244, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=244, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('describe', models.TextField(blank=True, null=True)),
                ('enquiry_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm_app.enquiry')),
            ],
        ),
        migrations.CreateModel(
            name='VisaSubcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimate_amt', models.FloatField()),
                ('cgst', models.FloatField()),
                ('sgst', models.FloatField()),
                ('totalAmount', models.FloatField()),
                ('lastupdated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('last_updated_on', models.DateTimeField(auto_now=True)),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_category', to='crm_app.visacategory')),
                ('country_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm_app.visacountry')),
                ('subcategory_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_subcategory', to='crm_app.visacategory')),
            ],
            options={
                'db_table': 'Pricing',
            },
        ),
        migrations.AddField(
            model_name='visacategory',
            name='visa_country_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm_app.visacountry'),
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_type', models.CharField(blank=True, choices=[('PTE', 'PTE'), ('TOEFL', 'TOEFL'), ('IELTS', 'IELTS')], max_length=100, null=True)),
                ('exam_date', models.DateField(blank=True, null=True)),
                ('reading', models.IntegerField(blank=True)),
                ('listening', models.IntegerField(blank=True)),
                ('speaking', models.IntegerField(blank=True)),
                ('writing', models.IntegerField(blank=True)),
                ('overall_score', models.IntegerField(blank=True)),
                ('enquiry_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.enquiry')),
            ],
        ),
        migrations.CreateModel(
            name='SuccessStory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='images/general/successstories/')),
                ('last_updated_on', models.DateTimeField(auto_now_add=True)),
                ('create_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('number_of_visa', models.IntegerField(blank=True, null=True)),
                ('amount', models.CharField(blank=True, max_length=100, null=True)),
                ('advance_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('file_charges', models.CharField(blank=True, max_length=100, null=True)),
                ('package_expiry_date', models.DateField(blank=True, null=True)),
                ('last_updated_on', models.DateTimeField(auto_now=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='media/package_images/')),
                ('processing_time', models.CharField(blank=True, choices=[('1 Month', '1 Month'), ('2 Month', '2 Month'), ('3 Month', '3 Month'), ('4 Month', '4 Month'), ('5 Month', '5 Month'), ('6 Month', '6 Month')], max_length=30, null=True)),
                ('approval', models.BooleanField(default='False')),
                ('assign_to_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.group')),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('visa_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='package_category', to='crm_app.visacategory')),
                ('visa_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.visacountry')),
            ],
        ),
        migrations.CreateModel(
            name='OutSourcingAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('contact_no', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('City', models.CharField(max_length=50)),
                ('Address', models.TextField()),
                ('zipcode', models.CharField(max_length=100)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(max_length=10)),
                ('marital_status', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('InReview', 'InReview'), ('Approved', 'Approved'), ('Reject', 'Reject')], default='Pending', max_length=255)),
                ('activeinactive', models.BooleanField(blank=True, default=True, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='media/OutSourcing/Agent/Profile Pic/')),
                ('organization_name', models.CharField(blank=True, max_length=100, null=True)),
                ('business_type', models.CharField(blank=True, max_length=100, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('account_holder', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('branch_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_no', models.CharField(blank=True, max_length=100, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=100, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('registeron', models.DateTimeField(auto_now_add=True)),
                ('adhar_card_front', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
                ('adhar_card_back', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
                ('pancard', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
                ('registration_certificate', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
                ('assign_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.employee')),
                ('registerdby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registered_outsourcingagents', to=settings.AUTH_USER_MODEL)),
                ('users', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_seen', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.agent')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.employee')),
                ('outsourceagent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.outsourcingagent')),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.CharField(max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to='media/Notes/')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('enquiry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.enquiry')),
            ],
            options={
                'db_table': 'Notes',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news', models.TextField()),
                ('employee', models.BooleanField(default=False)),
                ('agent', models.BooleanField(default=False)),
                ('outsource_Agent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('create_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(default='Web', max_length=200)),
                ('ip_address', models.GenericIPAddressField()),
                ('login_datetime', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FrontWebsiteEnquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('appointment_date', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(blank=True, choices=[('Appointment', 'Appointment'), ('Contact Us', 'Contact Us')], default='Appointment', max_length=20, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='media/frontwebsiteenquiry/')),
                ('last_updated_on', models.DateTimeField(auto_now=True)),
                ('category_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.visacategory')),
                ('country_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.visacountry')),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FollowUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('follow_up_status', models.CharField(blank=True, choices=[('Inprocess', 'Inprocess'), ('Done', 'Done')], max_length=20, null=True)),
                ('priority', models.CharField(blank=True, choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=20, null=True)),
                ('calendar', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('enquiry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm_app.enquiry')),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField(blank=True, null=True)),
                ('last_updated_on', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.employee')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='enquiry',
            name='Package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.package'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='Visa_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enquiry_category', to='crm_app.visacategory'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='Visa_country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.visacountry'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='Visa_subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enquiry_subcategory', to='crm_app.visacategory'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='assign_to_agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.agent'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='assign_to_assesment_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assesment_emp', to='crm_app.employee'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='assign_to_documentation_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documentation_emp', to='crm_app.employee'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='assign_to_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.employee'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='assign_to_outsourcingagent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.outsourcingagent'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='assign_to_sales_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_emp', to='crm_app.employee'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='assign_to_visa_team_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visa_team_emp', to='crm_app.employee'),
        ),
        migrations.AddField(
            model_name='enquiry',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EnqAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('status', models.CharField(choices=[('Process', 'Process'), ('Done', 'Done')], default='Process', max_length=100)),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('enquiry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.enquiry')),
            ],
            options={
                'db_table': 'Enquiry Appointment',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.group'),
        ),
        migrations.AddField(
            model_name='employee',
            name='users',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Education_Summary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_of_education', models.CharField(blank=True, max_length=100, null=True)),
                ('highest_level_education', models.CharField(blank=True, max_length=100, null=True)),
                ('grading_scheme', models.CharField(blank=True, max_length=100, null=True)),
                ('grade_avg', models.CharField(blank=True, max_length=100, null=True)),
                ('recent_college', models.BooleanField(blank=True, null=True)),
                ('level_education', models.CharField(blank=True, max_length=100, null=True)),
                ('country_of_institution', models.CharField(blank=True, max_length=100, null=True)),
                ('name_of_institution', models.CharField(blank=True, max_length=100, null=True)),
                ('primary_language', models.CharField(blank=True, max_length=100, null=True)),
                ('institution_from', models.DateField(blank=True, null=True)),
                ('institution_to', models.DateField(blank=True, null=True)),
                ('degree_Awarded', models.CharField(blank=True, max_length=100, null=True)),
                ('degree_Awarded_On', models.CharField(blank=True, max_length=100, null=True)),
                ('Address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('Province', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('enquiry_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.enquiry')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_file', models.FileField(blank=True, null=True, upload_to='media/Documents/')),
                ('last_updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('document_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.document')),
                ('enquiry_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.enquiry')),
                ('lastupdated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='document',
            name='document_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm_app.documentcategory'),
        ),
        migrations.AddField(
            model_name='document',
            name='lastupdated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_content', models.CharField(max_length=1000)),
                ('filename', models.CharField(blank=True, max_length=100, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='chat_attachments/')),
                ('msg_time', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm_app.chatgroup')),
                ('message_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CaseCategoryDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated_on', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_category', to='crm_app.visacategory')),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='crm_app.visacountry')),
                ('document', models.ManyToManyField(related_name='document', to='crm_app.document')),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Background_Information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background_information', models.CharField(blank=True, max_length=244, null=True)),
                ('enquiry_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm_app.enquiry')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('start', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.employee')),
            ],
        ),
        migrations.CreateModel(
            name='AgentKyc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adhar_card_front', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
                ('adhar_card_back', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
                ('pancard', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
                ('registration_certificate', models.FileField(blank=True, null=True, upload_to='media/Agent/Kyc')),
                ('uploaded_on', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.agent')),
                ('outsourceagent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.outsourcingagent')),
            ],
        ),
        migrations.CreateModel(
            name='AgentAgreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agreement_name', models.CharField(max_length=100)),
                ('agreement_file', models.FileField(blank=True, null=True, upload_to='media/Agreement/')),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.agent')),
                ('outsourceagent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.outsourcingagent')),
            ],
        ),
        migrations.AddField(
            model_name='agent',
            name='assign_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm_app.employee'),
        ),
        migrations.AddField(
            model_name='agent',
            name='registerdby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registered_agents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agent',
            name='users',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=50)),
                ('contact_no', models.CharField(max_length=10, unique=True)),
                ('users', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
